{"ast":null,"code":"var _jsxFileName = \"/Users/shellyfainberg/Desktop/simons-game/client/src/App.js\",\n  _s = $RefreshSig$();\n//Frontend\nimport { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport ColorCard from \"./components/ColorCard\";\nimport timeout from \"./utils/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [backendData, setBackendData] = useState([{}]);\n\n  // useEffect(() => {\n  //   fetch(\"/api\")\n  //     .then((response) => response.json())\n  //     .then((data) => setBackendData(data));\n  // }, []);\n\n  const [isOn, setIsOn] = useState(false);\n  const colorList = [\"green\", \"red\", \"yellow\", \"blue\"];\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: []\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n  const startHandle = () => {\n    setIsOn(true);\n  };\n  useEffect(() => {\n    if (isOn) {\n      setPlay({\n        ...initPlay,\n        isDisplay: true\n      });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      console.log(\"newColor\", newColor);\n      copyColors.push(newColor);\n      setPlay({\n        ...play,\n        colors: copyColors\n      });\n      // console.log(\"copy\", copyColors.length);\n    }\n  }, [isOn, play.isDisplay]);\n  useEffect(() => {\n    if (isOn && play.isDisplay && play.colors.length) {\n      // console.log(\"useeffect\",play.colors.length)\n      displayColors();\n    }\n  }, [isOn, play.isDisplay, play.colors.length]);\n  const displayColors = async () => {\n    await timeout(1000);\n    //  console.log(\"color:\",play.colors)\n    console.log(\"colorlength:\", play.colors.length);\n    for (let i = 0; i < play.colors.length; i++) {\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n      await timeout(1000);\n      if (i === play.colors.length - 1) {\n        // last color\n        const copyColors = [...play.colors];\n        setPlay({\n          ...play,\n          isDisplay: false,\n          userPlay: true,\n          userColors: copyColors.reverse()\n        });\n      }\n    }\n  };\n  const cardClickHandler = async color => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({\n            ...play,\n            userColors: copyUserColors\n          });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: []\n          });\n        }\n      } else {\n        await timeout(1000);\n        setPlay({\n          ...initPlay,\n          score: play.colors.length\n        });\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWarpper\",\n      children: colorList && colorList.map((color, index) => /*#__PURE__*/_jsxDEV(ColorCard, {\n        color: color,\n        flash: flashColor === color,\n        onClick: () => {\n          cardClickHandle(color);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), !isOn && !play.score && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: startHandle,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), isOn && (play.isDisplay || play.userPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: play.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nQrFvXfSvImUhdw+KPUpuEx1pKY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ColorCard","timeout","App","isOn","setIsOn","colorList","initPlay","isDisplay","colors","score","userPlay","userColors","play","setPlay","flashColor","setFlashColor","startHandle","newColor","Math","floor","random","copyColors","console","log","push","length","displayColors","i","reverse","cardClickHandler","color","copyUserColors","lastColor","pop","map","index","cardClickHandle"],"sources":["/Users/shellyfainberg/Desktop/simons-game/client/src/App.js"],"sourcesContent":["//Frontend\nimport { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport ColorCard from \"./components/ColorCard\";\nimport timeout from \"./utils/util\";\n\nconst App = () => {\n  // const [backendData, setBackendData] = useState([{}]);\n\n  // useEffect(() => {\n  //   fetch(\"/api\")\n  //     .then((response) => response.json())\n  //     .then((data) => setBackendData(data));\n  // }, []);\n\n  const [isOn, setIsOn] = useState(false);\n\n  const colorList = [\"green\", \"red\", \"yellow\", \"blue\"];\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: [],\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n\n  const startHandle = () => {\n    setIsOn(true);\n  };\n\n  useEffect(() => {\n    if (isOn) {\n      setPlay({ ...initPlay, isDisplay: true });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      console.log(\"newColor\",newColor)\n      copyColors.push(newColor);\n      setPlay({ ...play, colors: copyColors });\n      // console.log(\"copy\", copyColors.length);\n    }\n  }, [isOn, play.isDisplay]);\n\n  useEffect(() => {\n    if (isOn && play.isDisplay && play.colors.length) {\n      // console.log(\"useeffect\",play.colors.length)\n      displayColors();\n    }\n  }, [isOn, play.isDisplay, play.colors.length]);\n\n  const displayColors = async () => {\n    await timeout(1000);\n    //  console.log(\"color:\",play.colors)\n     console.log(\"colorlength:\",play.colors.length)\n    for (let i = 0; i < play.colors.length; i++) {\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n      await timeout(1000);\n\n      if (i === play.colors.length - 1) {\n        // last color\n        const copyColors = [...play.colors];\n        setPlay({\n          ...play,\n          isDisplay: false,\n          userPlay: true,\n          userColors: copyColors.reverse(),\n        });\n      }\n    }\n  };\n\n  const cardClickHandler = async (color) => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({ ...play, userColors: copyUserColors });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: [],\n          });\n        }\n      } else {\n        await timeout(1000);\n        setPlay({ ...initPlay, score: play.colors.length });\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n\n\n         \n\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n      <div className=\"cardWarpper\">\n        {colorList &&\n          colorList.map((color, index) => (\n            <ColorCard\n              key={index}\n              color={color}\n              flash={flashColor === color}\n              onClick={() => {\n                cardClickHandle(color);\n              }}\n            ></ColorCard>\n          ))}\n      </div>\n      {/* </header> */}\n\n      {!isOn && !play.score && (\n        <button className=\"startButton\" onClick={startHandle}>\n          Start\n        </button>\n      )}\n      {isOn && (play.isDisplay || play.userPlay) && (\n        <div className=\"score\">{play.score}</div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}