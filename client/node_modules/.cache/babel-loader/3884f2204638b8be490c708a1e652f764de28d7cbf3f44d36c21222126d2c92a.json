{"ast":null,"code":"var _jsxFileName = \"/Users/shellyfainberg/Documents/radiflow-project/simonsgame/client/src/App.js\",\n  _s = $RefreshSig$();\n//Frontend\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Button from \"./components/Button\";\nimport ColorCard from \"./components/ColorCard\";\nimport timeout from \"./utils/util\";\nimport redSoundFile from \"./sounds/simonSound1.mp3\";\nimport greenSoundFile from \"./sounds/simonSound2.mp3\";\nimport blueSoundFile from \"./sounds/simonSound3.mp3\";\nimport yellowSoundFile from \"./sounds/simonSound4.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isOn, setIsOn] = useState(false);\n  const colorList = [\"red\", \"green\", \"blue\", \"yellow\"];\n  const [soundObj] = useState({\n    red: new Audio(redSoundFile),\n    green: new Audio(greenSoundFile),\n    blue: new Audio(blueSoundFile),\n    yellow: new Audio(yellowSoundFile)\n  });\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: [],\n    highScore: 0\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n  const generateUserId = () => {\n    if (!localStorage.getItem(\"userId\")) {\n      const id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem(\"userId\", id);\n    }\n    return localStorage.getItem(\"userId\");\n  };\n  const submitScore = () => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        isOn: isOn,\n        score: play.score\n      })\n    }).then(response => response.json()).then(res => {\n      play.score = res.score;\n      play.highScore = res.highScore;\n    }).catch(error => console.log(error));\n  };\n  useEffect(() => {\n    soundObj[flashColor] && soundObj[flashColor].play();\n  }, [flashColor]);\n\n  // const [highScore, ] = useState(() => {\n  //   const highScoreFromStorage = localStorage.getItem(\"highScore\");\n  //   if (highScoreFromStorage) {\n  //     return highScoreFromStorage;\n  //   }\n  //   return 0;\n  // });\n\n  const startHandle = () => {\n    setIsOn(true);\n  };\n\n  // useEffect(() => {\n  //   if (!isOn) {\n  //     fetch(\"http://localhost:5000/api/status\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ isOn: isOn, score: play.score }),\n  //     })\n  //       .then((response) => response.json())\n  //       .then((res) => {\n  //         play.score = res.score;\n  //         play.highScore = res.highScore;\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  // }, [isOn]);\n\n  useEffect(() => {\n    if (isOn) {\n      setPlay({\n        ...initPlay,\n        isDisplay: true\n      });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      copyColors.push(newColor);\n      setPlay({\n        ...play,\n        colors: copyColors\n      });\n    }\n  }, [isOn, play.isDisplay]);\n  useEffect(() => {\n    displayColors();\n  }, [play.colors.length]);\n  const displayColors = useCallback(async () => {\n    if (!play.isDisplay) {\n      return;\n    }\n    for (let i = 0; i < play.colors.length; i++) {\n      await timeout(1000);\n      console.log(\"play.colors:\", play.colors);\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n    await timeout(1000);\n    const copyColors = [...play.colors];\n    setPlay({\n      ...play,\n      isDisplay: false,\n      userPlay: true,\n      userColors: copyColors.reverse()\n    });\n  }, [play.colors.length, play.isDisplay]);\n  const cardClickHandle = async color => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({\n            ...play,\n            userColors: copyUserColors\n          });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: []\n          });\n        }\n      } else {\n        await timeout(1000);\n        // submit score\n        // setIsOn(false);\n        setPlay({\n          ...initPlay,\n          score: play.colors.length - 1\n        });\n        submitScore();\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n  const closeHandle = () => {\n    setIsOn(false);\n\n    // const highScore = localStorage.getItem(\"highScore\");\n    // if (!highScore || play.score - 1 > highScore) {\n    //   console.log(\"play.score - 1 \",play.score - 1 )\n    //   setHighScore(play.score - 1);\n    //   localStorage.setItem(\"highScore\", JSON.stringify(play.score - 1));\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWarpper\",\n      children: colorList && colorList.map((color, index) => /*#__PURE__*/_jsxDEV(ColorCard, {\n        color: color,\n        flash: flashColor === color,\n        onClick: () => {\n          cardClickHandle(color);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerWrapper\",\n      children: [!isOn && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"simon\",\n        children: \"SIMON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }, this), !isOn && !play.score && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startHandle,\n        text: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 34\n      }, this), isOn && (play.isDisplay || play.userPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: play.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), isOn && !play.isDisplay && !play.userPlay && play.score && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score:\", play.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeHandle,\n          text: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highScoreWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Highest:\", play.highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"turnWrapper\",\n      children: isOn && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: play.isDisplay ? \"Computer turn\" : \"Your turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Vd6mzYSr9CYJS2ID18IIPCD21wA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useState","Button","ColorCard","timeout","redSoundFile","greenSoundFile","blueSoundFile","yellowSoundFile","App","isOn","setIsOn","colorList","soundObj","red","Audio","green","blue","yellow","initPlay","isDisplay","colors","score","userPlay","userColors","highScore","play","setPlay","flashColor","setFlashColor","generateUserId","localStorage","getItem","id","Math","random","toString","substring","setItem","submitScore","userId","fetch","method","headers","body","JSON","stringify","then","response","json","res","catch","error","console","log","startHandle","newColor","floor","copyColors","push","displayColors","length","i","reverse","cardClickHandle","color","copyUserColors","lastColor","pop","closeHandle","map","index"],"sources":["/Users/shellyfainberg/Documents/radiflow-project/simonsgame/client/src/App.js"],"sourcesContent":["//Frontend\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Button from \"./components/Button\";\nimport ColorCard from \"./components/ColorCard\";\nimport timeout from \"./utils/util\";\n\nimport redSoundFile from \"./sounds/simonSound1.mp3\";\nimport greenSoundFile from \"./sounds/simonSound2.mp3\";\nimport blueSoundFile from \"./sounds/simonSound3.mp3\";\nimport yellowSoundFile from \"./sounds/simonSound4.mp3\";\n\nconst App = () => {\n  const [isOn, setIsOn] = useState(false);\n\n  const colorList = [\"red\", \"green\", \"blue\", \"yellow\"];\n\n  const [soundObj] = useState({\n    red: new Audio(redSoundFile),\n    green: new Audio(greenSoundFile),\n    blue: new Audio(blueSoundFile),\n    yellow: new Audio(yellowSoundFile),\n  });\n\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: [],\n    highScore: 0,\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n\n  const generateUserId = () => {\n    if (!localStorage.getItem(\"userId\")) {\n      const id =\n        Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15);\n      localStorage.setItem(\"userId\", id);\n    }\n    return localStorage.getItem(\"userId\");\n  };\n\n  const submitScore = () => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ isOn: isOn, score: play.score }),\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        play.score = res.score;\n        play.highScore = res.highScore;\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    soundObj[flashColor] && soundObj[flashColor].play();\n  }, [flashColor]);\n\n  // const [highScore, ] = useState(() => {\n  //   const highScoreFromStorage = localStorage.getItem(\"highScore\");\n  //   if (highScoreFromStorage) {\n  //     return highScoreFromStorage;\n  //   }\n  //   return 0;\n  // });\n\n  const startHandle = () => {\n    setIsOn(true);\n  };\n\n  // useEffect(() => {\n  //   if (!isOn) {\n  //     fetch(\"http://localhost:5000/api/status\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ isOn: isOn, score: play.score }),\n  //     })\n  //       .then((response) => response.json())\n  //       .then((res) => {\n  //         play.score = res.score;\n  //         play.highScore = res.highScore;\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  // }, [isOn]);\n\n  useEffect(() => {\n    if (isOn) {\n      setPlay({ ...initPlay, isDisplay: true });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      copyColors.push(newColor);\n      setPlay({ ...play, colors: copyColors });\n    }\n  }, [isOn, play.isDisplay]);\n\n  useEffect(() => {\n    displayColors();\n  }, [play.colors.length]);\n\n  const displayColors = useCallback(async () => {\n    if (!play.isDisplay) {\n      return;\n    }\n    for (let i = 0; i < play.colors.length; i++) {\n      await timeout(1000);\n      console.log(\"play.colors:\", play.colors);\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n\n    await timeout(1000);\n    const copyColors = [...play.colors];\n    setPlay({\n      ...play,\n      isDisplay: false,\n      userPlay: true,\n      userColors: copyColors.reverse(),\n    });\n  }, [play.colors.length, play.isDisplay]);\n\n  const cardClickHandle = async (color) => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({ ...play, userColors: copyUserColors });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: [],\n          });\n        }\n      } else {\n        await timeout(1000);\n        // submit score\n        // setIsOn(false);\n        setPlay({ ...initPlay, score: play.colors.length - 1 });\n        submitScore();\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n\n  const closeHandle = () => {\n    setIsOn(false);\n\n    // const highScore = localStorage.getItem(\"highScore\");\n    // if (!highScore || play.score - 1 > highScore) {\n    //   console.log(\"play.score - 1 \",play.score - 1 )\n    //   setHighScore(play.score - 1);\n    //   localStorage.setItem(\"highScore\", JSON.stringify(play.score - 1));\n    // }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"cardWarpper\">\n        {colorList &&\n          colorList.map((color, index) => (\n            <ColorCard\n              key={index}\n              color={color}\n              flash={flashColor === color}\n              onClick={() => {\n                cardClickHandle(color);\n              }}\n            ></ColorCard>\n          ))}\n      </div>\n\n      <div className=\"centerWrapper\">\n        {!isOn && <h1 className=\"simon\">SIMON</h1>}\n        {!isOn && !play.score && <Button onClick={startHandle} text=\"Start\" />}\n        {isOn && (play.isDisplay || play.userPlay) && (\n          <div className=\"score\">{play.score}</div>\n        )}\n\n        {isOn && !play.isDisplay && !play.userPlay && play.score && (\n          <div className=\"lost\">\n            <div className=\"score\">Score:{play.score}</div>\n            <Button onClick={closeHandle} text=\"Close\" />\n          </div>\n        )}\n      </div>\n      <div className=\"highScoreWrapper\">\n        <h1>Highest:{play.highScore}</h1>\n      </div>\n      <div className=\"turnWrapper\">\n        {isOn && <h1>{play.isDisplay ? \"Computer turn\" : \"Your turn\"}</h1>}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}