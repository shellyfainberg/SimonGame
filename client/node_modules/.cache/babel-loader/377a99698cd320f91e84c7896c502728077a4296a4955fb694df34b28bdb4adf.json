{"ast":null,"code":"var _jsxFileName = \"/Users/shellyfainberg/Documents/radiflow-project/simonsgame/client/src/App.js\",\n  _s = $RefreshSig$();\n//Frontend\nimport { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Button from \"./components/Button\";\nimport ColorCard from \"./components/ColorCard\";\nimport Welcome from \"./components/Welcome\";\nimport timeout from \"./utils/util\";\nimport \"./App.scss\";\nimport redSoundFile from \"./sounds/simonSound1.mp3\";\nimport greenSoundFile from \"./sounds/simonSound2.mp3\";\nimport blueSoundFile from \"./sounds/simonSound3.mp3\";\nimport yellowSoundFile from \"./sounds/simonSound4.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [startGame, setStartGame] = useState(false);\n  const [isOn, setIsOn] = useState(false);\n  const colorList = [\"red\", \"green\", \"blue\", \"yellow\"];\n  const [soundObj] = useState({\n    red: new Audio(redSoundFile),\n    green: new Audio(greenSoundFile),\n    blue: new Audio(blueSoundFile),\n    yellow: new Audio(yellowSoundFile)\n  });\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: []\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n  const [highScore, setHighScore] = useState(0);\n  const generateUserId = () => {\n    if (!localStorage.getItem(\"userId\")) {\n      const id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem(\"userId\", id);\n    }\n    return localStorage.getItem(\"userId\");\n  };\n  const submitScore = () => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        score: play.score,\n        steps: play.colors\n      })\n    }).then(response => response.json()).then(res => {\n      play.score = res.score;\n      play.colors = res.colors;\n    }).catch(error => console.log(error));\n  };\n  useEffect(() => {\n    soundObj[flashColor] && soundObj[flashColor].play();\n  }, [flashColor]);\n  const startHandle = () => {\n    setIsOn(true);\n  };\n  useEffect(() => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`).then(response => response.json()).then(res => {\n      setHighScore(res[0].highScore);\n      console.log(res[0].highScore);\n    }).catch(error => console.log(error));\n  }, [isOn]);\n  useEffect(() => {\n    if (isOn) {\n      setPlay({\n        ...initPlay,\n        isDisplay: true\n      });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      copyColors.push(newColor);\n      setPlay({\n        ...play,\n        colors: copyColors\n      });\n    }\n  }, [isOn, play.isDisplay]);\n  useEffect(() => {\n    displayColors();\n  }, [play.colors.length]);\n  const displayColors = useCallback(async () => {\n    if (!play.isDisplay) {\n      return;\n    }\n    for (let i = 0; i < play.colors.length; i++) {\n      await timeout(1000);\n      console.log(\"play.colors:\", play.colors);\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n    await timeout(1000);\n    const copyColors = [...play.colors];\n    setPlay({\n      ...play,\n      isDisplay: false,\n      userPlay: true,\n      userColors: copyColors.reverse()\n    });\n  }, [play.colors.length, play.isDisplay]);\n  const cardClickHandle = async color => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({\n            ...play,\n            userColors: copyUserColors\n          });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: []\n          });\n        }\n      } else {\n        await timeout(1000);\n        setPlay({\n          ...initPlay,\n          score: play.colors.length - 1\n        });\n        submitScore();\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n  const closeHandle = () => {\n    setIsOn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [!startGame && /*#__PURE__*/_jsxDEV(Welcome, {\n      onClick: () => setStartGame(prevState => !prevState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), startGame && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardWarpper\",\n        children: colorList && colorList.map((color, index) => /*#__PURE__*/_jsxDEV(ColorCard, {\n          color: color,\n          flash: flashColor === color,\n          onClick: () => {\n            cardClickHandle(color);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centerWrapper\",\n        children: [!isOn && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"simon\",\n          children: \"SIMON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 23\n        }, this), !isOn && !play.score && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: startHandle,\n          text: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), isOn && (play.isDisplay || play.userPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: play.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), isOn && !play.isDisplay && !play.userPlay && play.score && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lost\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score\",\n            children: [\"Score:\", play.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: closeHandle,\n            text: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highScoreWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Highest:\", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turnWrapper\",\n        children: isOn && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: play.isDisplay ? \"Computer turn\" : \"Your turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setStartGame(prevState => !prevState),\n          children: \"quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8daHFtthu4g/l0VdUDdlMOkpWzk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useState","Button","ColorCard","Welcome","timeout","redSoundFile","greenSoundFile","blueSoundFile","yellowSoundFile","App","startGame","setStartGame","isOn","setIsOn","colorList","soundObj","red","Audio","green","blue","yellow","initPlay","isDisplay","colors","score","userPlay","userColors","play","setPlay","flashColor","setFlashColor","highScore","setHighScore","generateUserId","localStorage","getItem","id","Math","random","toString","substring","setItem","submitScore","userId","fetch","method","headers","body","JSON","stringify","steps","then","response","json","res","catch","error","console","log","startHandle","newColor","floor","copyColors","push","displayColors","length","i","reverse","cardClickHandle","color","copyUserColors","lastColor","pop","closeHandle","prevState","map","index"],"sources":["/Users/shellyfainberg/Documents/radiflow-project/simonsgame/client/src/App.js"],"sourcesContent":["//Frontend\nimport { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Button from \"./components/Button\";\nimport ColorCard from \"./components/ColorCard\";\nimport Welcome from \"./components/Welcome\";\nimport timeout from \"./utils/util\";\nimport \"./App.scss\";\n\nimport redSoundFile from \"./sounds/simonSound1.mp3\";\nimport greenSoundFile from \"./sounds/simonSound2.mp3\";\nimport blueSoundFile from \"./sounds/simonSound3.mp3\";\nimport yellowSoundFile from \"./sounds/simonSound4.mp3\";\n\nconst App = () => {\n  const [startGame, setStartGame] = useState(false);\n  const [isOn, setIsOn] = useState(false);\n\n  const colorList = [\"red\", \"green\", \"blue\", \"yellow\"];\n\n  const [soundObj] = useState({\n    red: new Audio(redSoundFile),\n    green: new Audio(greenSoundFile),\n    blue: new Audio(blueSoundFile),\n    yellow: new Audio(yellowSoundFile),\n  });\n\n  const initPlay = {\n    isDisplay: false,\n    colors: [],\n    score: 0,\n    userPlay: false,\n    userColors: [],\n  };\n  const [play, setPlay] = useState(initPlay);\n  const [flashColor, setFlashColor] = useState(\"\");\n  const [highScore, setHighScore] = useState(0);\n\n  const generateUserId = () => {\n    if (!localStorage.getItem(\"userId\")) {\n      const id =\n        Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15);\n      localStorage.setItem(\"userId\", id);\n    }\n    return localStorage.getItem(\"userId\");\n  };\n\n  const submitScore = () => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        score: play.score,\n        steps: play.colors,\n      }),\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        play.score = res.score;\n        play.colors = res.colors;\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    soundObj[flashColor] && soundObj[flashColor].play();\n  }, [flashColor]);\n\n  const startHandle = () => {\n    setIsOn(true);\n  };\n\n  useEffect(() => {\n    const userId = generateUserId();\n    fetch(`http://localhost:5000/api/status/${userId}`)\n      .then((response) => response.json())\n      .then((res) => {\n        setHighScore(res[0].highScore);\n        console.log(res[0].highScore);\n      })\n      .catch((error) => console.log(error));\n  }, [isOn]);\n\n  useEffect(() => {\n    if (isOn) {\n      setPlay({ ...initPlay, isDisplay: true });\n    } else {\n      setPlay(initPlay);\n    }\n  }, [isOn]);\n\n  useEffect(() => {\n    if (isOn && play.isDisplay) {\n      let newColor = colorList[Math.floor(Math.random() * 4)];\n      let copyColors = [...play.colors];\n      copyColors.push(newColor);\n      setPlay({ ...play, colors: copyColors });\n    }\n  }, [isOn, play.isDisplay]);\n\n  useEffect(() => {\n    displayColors();\n  }, [play.colors.length]);\n\n  const displayColors = useCallback(async () => {\n    if (!play.isDisplay) {\n      return;\n    }\n    for (let i = 0; i < play.colors.length; i++) {\n      await timeout(1000);\n      console.log(\"play.colors:\", play.colors);\n      setFlashColor(play.colors[i]);\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n\n    await timeout(1000);\n    const copyColors = [...play.colors];\n    setPlay({\n      ...play,\n      isDisplay: false,\n      userPlay: true,\n      userColors: copyColors.reverse(),\n    });\n  }, [play.colors.length, play.isDisplay]);\n\n  const cardClickHandle = async (color) => {\n    if (!play.isDisplay && play.userPlay) {\n      const copyUserColors = [...play.userColors];\n      const lastColor = copyUserColors.pop(); // remove the last from the array\n\n      setFlashColor(color);\n\n      if (color === lastColor) {\n        if (copyUserColors.length) {\n          setPlay({ ...play, userColors: copyUserColors });\n        } else {\n          await timeout(1000);\n          setPlay({\n            ...play,\n            isDisplay: true,\n            userPlay: false,\n            score: play.colors.length,\n            userColors: [],\n          });\n        }\n      } else {\n        await timeout(1000);\n        setPlay({ ...initPlay, score: play.colors.length - 1 });\n        submitScore();\n      }\n      await timeout(1000);\n      setFlashColor(\"\");\n    }\n  };\n\n  const closeHandle = () => {\n    setIsOn(false);\n  };\n\n  return (\n    <Fragment>\n      {!startGame && (\n        <Welcome onClick={() => setStartGame((prevState) => !prevState)} />\n      )}\n\n      {startGame && (\n        <div className=\"App\">\n          <div className=\"cardWarpper\">\n            {colorList &&\n              colorList.map((color, index) => (\n                <ColorCard\n                  key={index}\n                  color={color}\n                  flash={flashColor === color}\n                  onClick={() => {\n                    cardClickHandle(color);\n                  }}\n                ></ColorCard>\n              ))}\n          </div>\n\n          <div className=\"centerWrapper\">\n            {!isOn && <h1 className=\"simon\">SIMON</h1>}\n            {!isOn && !play.score && (\n              <Button onClick={startHandle} text=\"Start\" />\n            )}\n            {isOn && (play.isDisplay || play.userPlay) && (\n              <div className=\"score\">{play.score}</div>\n            )}\n\n            {isOn && !play.isDisplay && !play.userPlay && play.score && (\n              <div className=\"lost\">\n                <div className=\"score\">Score:{play.score}</div>\n                <Button onClick={closeHandle} text=\"Close\" />\n              </div>\n            )}\n          </div>\n          <div className=\"highScoreWrapper\">\n            <h1>Highest:{highScore}</h1>\n          </div>\n          <div className=\"turnWrapper\">\n            {isOn && <h1>{play.isDisplay ? \"Computer turn\" : \"Your turn\"}</h1>}\n          </div>\n          <div className=\"start\">\n            <button\n              className=\"button\"\n              onClick={() => setStartGame((prevState) => !prevState)}\n            >\n              quit\n            </button>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}